<theory name="VC_def"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="real.Real"/><require name="real.RealInfix"/><require name="real.Abs"/><require name="real.FromInt"/><require name="real.Truncate"/><require name="real.Square"/><require name="bv.Pow2int"/><require name="bool.Bool"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><typedecl name="us_private" altname="__private" path="_gnatprove_standard_th.Main_Main"><params/></typedecl><typedecl name="us_fixed" altname="__fixed" path="_gnatprove_standard_th.Main_Main"><params/><type name="Int.int"/></typedecl><param name="private__bool_eq" altname="private__bool_eq" path="_gnatprove_standard.Main"><fun><type name="us_private" local="true"/><type name="us_private" local="true"/><type name="HOL.bool"/></fun></param><param name="us_null_ext_us" altname="__null_ext__" path="_gnatprove_standard.Main"><type name="us_private" local="true"/></param><typedecl name="us_type_of_heap" altname="__type_of_heap" path="_gnatprove_standard.Main"><params/></typedecl><datatypes><datatype name="us_type_of_heap__ref" altname="__type_of_heap__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk___type_of_heap__ref" altname="mk __type_of_heap__ref" path="_gnatprove_standard.Main"><carg name="us_type_of_heap__content" altname="__type_of_heap__content" path="_gnatprove_standard.Main"><type name="us_type_of_heap" local="true"/></carg></constr></constrs></datatype></datatypes><typedecl name="us_image" altname="__image" path="_gnatprove_standard.Main"><params/></typedecl><datatypes><datatype name="int__ref" altname="int__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk_int__ref" altname="mk int__ref" path="_gnatprove_standard.Main"><carg name="int__content" altname="int__content" path="_gnatprove_standard.Main"><type name="Int.int"/></carg></constr></constrs></datatype></datatypes><datatypes><datatype name="bool__ref" altname="bool__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk_bool__ref" altname="mk bool__ref" path="_gnatprove_standard.Main"><carg name="bool__content" altname="bool__content" path="_gnatprove_standard.Main"><type name="HOL.bool"/></carg></constr></constrs></datatype></datatypes><datatypes><datatype name="us_fixed__ref" altname="__fixed__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk___fixed__ref" altname="mk __fixed__ref" path="_gnatprove_standard.Main"><carg name="us_fixed__content" altname="__fixed__content" path="_gnatprove_standard.Main"><type name="Int.int"/></carg></constr></constrs></datatype></datatypes><datatypes><datatype name="real__ref" altname="real__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk_real__ref" altname="mk real__ref" path="_gnatprove_standard.Main"><carg name="real__content" altname="real__content" path="_gnatprove_standard.Main"><type name="Real.real"/></carg></constr></constrs></datatype></datatypes><datatypes><datatype name="us_private__ref" altname="__private__ref" path="_gnatprove_standard.Main"><params/><constrs><constr name="mk___private__ref" altname="mk __private__ref" path="_gnatprove_standard.Main"><carg name="us_private__content" altname="__private__content" path="_gnatprove_standard.Main"><type name="us_private" local="true"/></carg></constr></constrs></datatype></datatypes><definition altname="int__ref___projection" path="_gnatprove_standard.Main"><app><const name="HOL.eq"/><app><var name="int__ref___projection"><fun><type name="int__ref" local="true"/><type name="Int.int"/></fun></var><var name="a"><type name="int__ref" local="true"/></var></app><app><const name="int__content" local="true"><fun><type name="int__ref" local="true"/><type name="Int.int"/></fun></const><var name="a"><type name="int__ref" local="true"/></var></app></app></definition><definition altname="__fixed__ref___projection" path="_gnatprove_standard.Main"><app><const name="HOL.eq"/><app><var name="us_fixed__ref___projection"><fun><type name="us_fixed__ref" local="true"/><type name="Int.int"/></fun></var><var name="a"><type name="us_fixed__ref" local="true"/></var></app><app><const name="us_fixed__content" local="true"><fun><type name="us_fixed__ref" local="true"/><type name="Int.int"/></fun></const><var name="a"><type name="us_fixed__ref" local="true"/></var></app></app></definition><definition altname="bool__ref___projection" path="_gnatprove_standard.Main"><app><const name="HOL.eq"/><app><var name="bool__ref___projection"><fun><type name="bool__ref" local="true"/><type name="HOL.bool"/></fun></var><var name="a"><type name="bool__ref" local="true"/></var></app><app><const name="bool__content" local="true"><fun><type name="bool__ref" local="true"/><type name="HOL.bool"/></fun></const><var name="a"><type name="bool__ref" local="true"/></var></app></app></definition><definition altname="real__ref___projection" path="_gnatprove_standard.Main"><app><const name="HOL.eq"/><app><var name="real__ref___projection"><fun><type name="real__ref" local="true"/><type name="Real.real"/></fun></var><var name="a"><type name="real__ref" local="true"/></var></app><app><const name="real__content" local="true"><fun><type name="real__ref" local="true"/><type name="Real.real"/></fun></const><var name="a"><type name="real__ref" local="true"/></var></app></app></definition><definition altname="__private__ref___projection" path="_gnatprove_standard.Main"><app><const name="HOL.eq"/><app><var name="us_private__ref___projection"><fun><type name="us_private__ref" local="true"/><type name="us_private" local="true"/></fun></var><var name="a"><type name="us_private__ref" local="true"/></var></app><app><const name="us_private__content" local="true"><fun><type name="us_private__ref" local="true"/><type name="us_private" local="true"/></fun></const><var name="a"><type name="us_private__ref" local="true"/></var></app></app></definition><typedecl name="t" altname="t" path="ieee_float.Float32"><params/></typedecl><param name="tqtreal" altname="t&#39;real" path="ieee_float.Float32"><fun><type name="t" local="true"/><type name="Real.real"/></fun></param><param name="tqtisFinite" altname="t&#39;isFinite" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><datatypes><datatype name="mode" altname="mode" path="ieee_float.RoundingMode"><params/><constrs><constr name="RNE" altname="RNE" path="ieee_float.RoundingMode"/><constr name="RNA" altname="RNA" path="ieee_float.RoundingMode"/><constr name="RTP" altname="RTP" path="ieee_float.RoundingMode"/><constr name="RTN" altname="RTN" path="ieee_float.RoundingMode"/><constr name="RTZ" altname="RTZ" path="ieee_float.RoundingMode"/></constrs></datatype></datatypes><definition altname="to_nearest" path="ieee_float.RoundingMode"><app><const name="HOL.eq"/><app><var name="to_nearest"><pred><type name="mode" local="true"/></pred></var><var name="m"><type name="mode" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="m"><type name="mode" local="true"/></var><const name="RNE" local="true"><type name="mode" local="true"/></const></app><app><const name="HOL.eq"/><var name="m"><type name="mode" local="true"/></var><const name="RNA" local="true"><type name="mode" local="true"/></const></app></app></app></definition><param name="zeroF" altname="zeroF" path="ieee_float.Float32"><type name="t" local="true"/></param><param name="add" altname="add" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="sub" altname="sub" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="mul" altname="mul" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="div" altname="div" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="abs" altname="abs" path="ieee_float.Float32"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="neg" altname="neg" path="ieee_float.Float32"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="fma" altname="fma" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="sqrt" altname="sqrt" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="roundToIntegral" altname="roundToIntegral" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="min" altname="min" path="ieee_float.Float32"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="max" altname="max" path="ieee_float.Float32"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><param name="le" altname="le" path="ieee_float.Float32"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></param><param name="lt" altname="lt" path="ieee_float.Float32"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></param><param name="eq" altname="eq" path="ieee_float.Float32"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></param><param name="is_normal" altname="is_normal" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_subnormal" altname="is_subnormal" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_zero" altname="is_zero" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_infinite" altname="is_infinite" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_nan" altname="is_nan" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_positive" altname="is_positive" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><param name="is_negative" altname="is_negative" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><definition altname="is_plus_infinity" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="is_plus_infinity"><pred><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></definition><definition altname="is_minus_infinity" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="is_minus_infinity"><pred><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></definition><definition altname="is_plus_zero" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="is_plus_zero"><pred><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></definition><definition altname="is_minus_zero" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="is_minus_zero"><pred><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></definition><definition altname="is_not_nan" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="is_not_nan"><pred><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></definition><axiom name="is_not_nan1" altname="is_not_nan" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="is_not_finite" altname="is_not_finite" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.Not"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.disj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="zeroF_is_positive" altname="zeroF_is_positive" path="ieee_float.Float32"><prems/><concls><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><const name="zeroF" local="true"><type name="t" local="true"/></const></app></concls></axiom><axiom name="zeroF_is_zero" altname="zeroF_is_zero" path="ieee_float.Float32"><prems/><concls><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><const name="zeroF" local="true"><type name="t" local="true"/></const></app></concls></axiom><axiom name="zero_to_real" altname="zero_to_real" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><num val="0"><type name="Real.real"/></num></app></app></app></concls></axiom><param name="of_int" altname="of_int" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></param><param name="to_int" altname="to_int" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></param><axiom name="zero_of_int" altname="zero_of_int" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><const name="zeroF" local="true"><type name="t" local="true"/></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><num val="0"><type name="Int.int"/></num></app></app></concls></axiom><param name="round" altname="round" path="ieee_float.Float32"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></param><param name="max_int" altname="max_int" path="ieee_float.Float32"><type name="Int.int"/></param><axiom name="max_real_int" altname="max_real_int" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><const name="max_int" local="true"><type name="Int.int"/></const></app></app></concls></axiom><definition altname="in_range" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="in_range"><pred><type name="Real.real"/></pred></var><var name="x"><type name="Real.real"/></var></app><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.uminus_class.uminus"/><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app><var name="x"><type name="Real.real"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app></app></app></definition><definition altname="in_int_range" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="in_int_range"><pred><type name="Int.int"/></pred></var><var name="i"><type name="Int.int"/></var></app><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.uminus_class.uminus"/><const name="max_int" local="true"><type name="Int.int"/></const></app><var name="i"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="i"><type name="Int.int"/></var><const name="max_int" local="true"><type name="Int.int"/></const></app></app></app></definition><axiom name="is_finite" altname="is_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="in_range" local="true"><pred><type name="Real.real"/></pred></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><definition altname="no_overflow" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="no_overflow"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></var><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app><app><const name="in_range" local="true"><pred><type name="Real.real"/></pred></const><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></app></app></definition><axiom name="Bounded_real_no_overflow" altname="Bounded_real_no_overflow" path="ieee_float.Float32"><prems><app><const name="in_range" local="true"><pred><type name="Real.real"/></pred></const><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></concls></axiom><axiom name="Round_monotonic" altname="Round_monotonic" path="ieee_float.Float32"><prems><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><var name="y"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="y"><type name="Real.real"/></var></app></app></concls></axiom><axiom name="Round_idempotent" altname="Round_idempotent" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m1"><type name="mode" local="true"/></var><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m2"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m2"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></app></concls></axiom><axiom name="Round_to_real" altname="Round_to_real" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="Round_down_le" altname="Round_down_le" path="ieee_float.Float32"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app><var name="x"><type name="Real.real"/></var></app></concls></axiom><axiom name="Round_up_ge" altname="Round_up_ge" path="ieee_float.Float32"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><var name="x"><type name="Real.real"/></var><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app></app></concls></axiom><axiom name="Round_down_neg" altname="Round_down_neg" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Real.real"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app></app></app></concls></axiom><axiom name="Round_up_neg" altname="Round_up_neg" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><app><const name="Groups.uminus_class.uminus"/><var name="x"><type name="Real.real"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app></app></app></concls></axiom><definition altname="in_safe_int_range" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="in_safe_int_range"><pred><type name="Int.int"/></pred></var><var name="i"><type name="Int.int"/></var></app><app><const name="HOL.conj"/><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.uminus_class.uminus"/><num val="16777216"><type name="Int.int"/></num></app><var name="i"><type name="Int.int"/></var></app><app><const name="Orderings.ord_class.less_eq"/><var name="i"><type name="Int.int"/></var><num val="16777216"><type name="Int.int"/></num></app></app></app></definition><axiom name="Exact_rounding_for_integers" altname="Exact_rounding_for_integers" path="ieee_float.Float32"><prems><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="i"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><var name="i"><type name="Int.int"/></var></app></app></concls></axiom><definition altname="same_sign" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="same_sign"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></definition><definition altname="diff_sign" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="diff_sign"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></definition><axiom name="feq_eq" altname="feq_eq" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="eq_feq" altname="eq_feq" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="eq_refl" altname="eq_refl" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="eq_sym" altname="eq_sym" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="eq_trans" altname="eq_trans" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></concls></axiom><axiom name="eq_zero" altname="eq_zero" path="ieee_float.Float32"><prems/><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><const name="zeroF" local="true"><type name="t" local="true"/></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="zeroF" local="true"><type name="t" local="true"/></const></app></app></concls></axiom><axiom name="eq_to_real_finite" altname="eq_to_real_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="eq_special" altname="eq_special" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="lt_finite" altname="lt_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="le_finite" altname="le_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less_eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="le_lt_trans" altname="le_lt_trans" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></prems><concls><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></concls></axiom><axiom name="lt_le_trans" altname="lt_le_trans" path="ieee_float.Float32"><prems><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></prems><concls><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></concls></axiom><axiom name="le_ge_asym" altname="le_ge_asym" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="not_lt_ge" altname="not_lt_ge" path="ieee_float.Float32"><prems><app><const name="HOL.Not"/><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="not_gt_le" altname="not_gt_le" path="ieee_float.Float32"><prems><app><const name="HOL.Not"/><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="le_special" altname="le_special" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="is_minus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_plus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="lt_special" altname="lt_special" path="ieee_float.Float32"><prems><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="is_minus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_minus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_plus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="is_plus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></concls></axiom><axiom name="lt_lt_finite" altname="lt_lt_finite" path="ieee_float.Float32"><prems><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="positive_to_real" altname="positive_to_real" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="to_real_positive" altname="to_real_positive" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><num val="0"><type name="Real.real"/></num><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="negative_to_real" altname="negative_to_real" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><num val="0"><type name="Real.real"/></num></app></concls></axiom><axiom name="to_real_negative" altname="to_real_negative" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><num val="0"><type name="Real.real"/></num></app></prems><concls><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="negative_xor_positive" altname="negative_xor_positive" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.Not"/><app><const name="HOL.conj"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="negative_or_positive" altname="negative_or_positive" path="ieee_float.Float32"><prems><app><const name="is_not_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.disj"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="diff_sign_trans" altname="diff_sign_trans" path="ieee_float.Float32"><prems><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></prems><concls><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></concls></axiom><axiom name="diff_sign_product" altname="diff_sign_product" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><num val="0"><type name="Real.real"/></num></app></prems><concls><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="same_sign_product" altname="same_sign_product" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></concls></axiom><definition altname="product_sign" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="product_sign"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></var><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app></app></definition><definition altname="overflow_value" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="overflow_value"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></var><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><case><var name="m"><type name="mode" local="true"/></var><pat><const name="RTN" local="true"><type name="mode" local="true"/></const><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></pat><pat><const name="RTP" local="true"><type name="mode" local="true"/></const><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Groups.uminus_class.uminus"/><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app></app></app></app></app></pat><pat><const name="RTZ" local="true"><type name="mode" local="true"/></const><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Groups.uminus_class.uminus"/><app><const name="Groups.times_class.times"/><num val="33554430"><type name="Real.real"/></num><num val="10141204801825835211973625643008"/></app></app></app></app></app></app></pat><pat><const name="RNA" local="true"><type name="mode" local="true"/></const><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></pat><pat><const name="RNE" local="true"><type name="mode" local="true"/></const><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></pat></case></app></definition><definition altname="sign_zero_result" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="sign_zero_result"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></var><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.implies"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><case><var name="m"><type name="mode" local="true"/></var><pat><const name="RTN" local="true"><type name="mode" local="true"/></const><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></pat><pat><const name="Pure.dummy_pattern"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></pat></case></app></app></definition><axiom name="add_finite" altname="add_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="add_finite_rev" altname="add_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="add_finite_rev_n" altname="add_finite_rev_n" path="ieee_float.Float32"><prems><app><const name="to_nearest" local="true"><pred><type name="mode" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="sub_finite" altname="sub_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="sub_finite_rev" altname="sub_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="sub_finite_rev_n" altname="sub_finite_rev_n" path="ieee_float.Float32"><prems><app><const name="to_nearest" local="true"><pred><type name="mode" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="mul_finite" altname="mul_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="mul_finite_rev" altname="mul_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="mul_finite_rev_n" altname="mul_finite_rev_n" path="ieee_float.Float32"><prems><app><const name="to_nearest" local="true"><pred><type name="mode" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="div_finite" altname="div_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Rings.divide_class.divide"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Rings.divide_class.divide"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="div_finite_rev" altname="div_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><num val="0"><type name="Real.real"/></num></app></app></app></app></concls></axiom><axiom name="div_finite_rev_n" altname="div_finite_rev_n" path="ieee_float.Float32"><prems><app><const name="to_nearest" local="true"><pred><type name="mode" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Rings.divide_class.divide"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Rings.divide_class.divide"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="neg_finite" altname="neg_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="neg_finite_rev" altname="neg_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="abs_finite" altname="abs_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="Groups.abs_class.abs"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="abs_finite_rev" altname="abs_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="Groups.abs_class.abs"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="abs_universal" altname="abs_universal" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.Not"/><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="fma_finite" altname="fma_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="fma_finite_rev" altname="fma_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></concls></axiom><axiom name="fma_finite_rev_n" altname="fma_finite_rev_n" path="ieee_float.Float32"><prems><app><const name="to_nearest" local="true"><pred><type name="mode" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="sqrt_finite" altname="sqrt_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="sqrt" path="real.Square"><fun><type name="Real.real"/><type name="Real.real"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="sqrt_finite_rev" altname="sqrt_finite_rev" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Real.real"/></num><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="sqrt" path="real.Square"><fun><type name="Real.real"/><type name="Real.real"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><definition altname="same_sign_real" path="ieee_float.Float32"><app><const name="HOL.eq"/><app><var name="same_sign_real"><pred><type name="t" local="true"/><type name="Real.real"/></pred></var><var name="x"><type name="t" local="true"/></var><var name="r"><type name="Real.real"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.conj"/><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><num val="0"><type name="Real.real"/></num><var name="r"><type name="Real.real"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><var name="r"><type name="Real.real"/></var><num val="0"><type name="Real.real"/></num></app></app></app></app></definition><axiom name="add_special" altname="add_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></app><app><const name="HOL.conj"/><app><const name="same_sign_real" local="true"><pred><type name="t" local="true"/><type name="Real.real"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="overflow_value" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="sign_zero_result" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></concls></axiom><axiom name="sub_special" altname="sub_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></app><app><const name="HOL.conj"/><app><const name="same_sign_real" local="true"><pred><type name="t" local="true"/><type name="Real.real"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="Groups.minus_class.minus"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="overflow_value" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="sign_zero_result" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></concls></axiom><axiom name="mul_special" altname="mul_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></app><app><const name="overflow_value" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="div_special" altname="div_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.Not"/><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Rings.divide_class.divide"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app></app></app></app></app></app><app><const name="overflow_value" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="div" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="neg_special" altname="neg_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="diff_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="abs_special" altname="abs_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="fma_special" altname="fma_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="HOL.Not"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="is_infinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app></app></app></app></app><app><const name="HOL.conj"/><app><const name="same_sign_real" local="true"><pred><type name="t" local="true"/><type name="Real.real"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="overflow_value" local="true"><pred><type name="mode" local="true"/><type name="t" local="true"/></pred></const><var name="m"><type name="mode" local="true"/></var><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app><var name="z"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="product_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.eq"/><app><const name="Groups.plus_class.plus"/><app><const name="Groups.times_class.times"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="y"><type name="t" local="true"/></var></app></app><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="z"><type name="t" local="true"/></var></app></app><num val="0"><type name="Real.real"/></num></app><app><const name="HOL.conj"/><app><const name="HOL.implies"/><app><const name="HOL.eq"/><var name="m"><type name="mode" local="true"/></var><const name="RTN" local="true"><type name="mode" local="true"/></const></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="m"><type name="mode" local="true"/></var><const name="RTN" local="true"><type name="mode" local="true"/></const></app></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></app></app></app></app></app></app></concls></axiom><axiom name="sqrt_special" altname="sqrt_special" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.implies"/><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="is_plus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_plus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="is_minus_infinity" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><num val="0"><type name="Real.real"/></num></app></app><app><const name="is_nan" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="HOL.implies"/><app><const name="is_zero" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="same_sign" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app><app><const name="HOL.implies"/><app><const name="HOL.conj"/><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="Orderings.ord_class.less"/><num val="0"><type name="Real.real"/></num><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sqrt" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="of_int_add_exact" altname="of_int_add_exact" path="ieee_float.Float32"><prems><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="i"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="j"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><app><const name="Groups.plus_class.plus"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.plus_class.plus"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="n"><type name="mode" local="true"/></var><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="i"><type name="Int.int"/></var></app><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="j"><type name="Int.int"/></var></app></app></app></concls></axiom><axiom name="of_int_sub_exact" altname="of_int_sub_exact" path="ieee_float.Float32"><prems><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="i"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="j"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><app><const name="Groups.minus_class.minus"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.minus_class.minus"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="n"><type name="mode" local="true"/></var><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="i"><type name="Int.int"/></var></app><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="j"><type name="Int.int"/></var></app></app></app></concls></axiom><axiom name="of_int_mul_exact" altname="of_int_mul_exact" path="ieee_float.Float32"><prems><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="i"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="j"><type name="Int.int"/></var></app><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><app><const name="Groups.times_class.times"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="Groups.times_class.times"/><var name="i"><type name="Int.int"/></var><var name="j"><type name="Int.int"/></var></app></app><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="n"><type name="mode" local="true"/></var><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="i"><type name="Int.int"/></var></app><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="j"><type name="Int.int"/></var></app></app></app></concls></axiom><axiom name="Min_r" altname="Min_r" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="min" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="Min_l" altname="Min_l" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="min" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="Max_r" altname="Max_r" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="max" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="Max_l" altname="Max_l" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="max" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><var name="y"><type name="t" local="true"/></var></app></concls></axiom><param name="is_int" altname="is_int" path="ieee_float.Float32"><pred><type name="t" local="true"/></pred></param><axiom name="zeroF_is_int" altname="zeroF_is_int" path="ieee_float.Float32"><prems/><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><const name="zeroF" local="true"><type name="t" local="true"/></const></app></concls></axiom><axiom name="of_int_is_int" altname="of_int_is_int" path="ieee_float.Float32"><prems><app><const name="in_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="x"><type name="Int.int"/></var></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Int.int"/></var></app></app></concls></axiom><axiom name="big_float_is_int" altname="big_float_is_int" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="i"><type name="t" local="true"/></var></app><app><const name="HOL.disj"/><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="i"><type name="t" local="true"/></var><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><num val="16777216"><type name="Int.int"/></num></app></app></app><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><num val="16777216"><type name="Int.int"/></num></app><var name="i"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="i"><type name="t" local="true"/></var></app></concls></axiom><axiom name="roundToIntegral_is_int" altname="roundToIntegral_is_int" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="eq_is_int" altname="eq_is_int" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="add_int" altname="add_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="sub_int" altname="sub_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="mul_int" altname="mul_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="fma_int" altname="fma_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="z"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="fma" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var><var name="z"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="neg_int" altname="neg_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="abs_int" altname="abs_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="abs" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="is_int_of_int" altname="is_int_of_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="mqt"><type name="mode" local="true"/></var><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="is_int_to_int" altname="is_int_to_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="in_int_range" local="true"><pred><type name="Int.int"/></pred></const><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="is_int_is_finite" altname="is_int_is_finite" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="int_to_real" altname="int_to_real" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="truncate_int" altname="truncate_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="i"><type name="t" local="true"/></var></app></prems><concls><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="i"><type name="t" local="true"/></var></app><var name="i"><type name="t" local="true"/></var></app></concls></axiom><axiom name="truncate_neg" altname="truncate_neg" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTZ" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="truncate_pos" altname="truncate_pos" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTZ" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="ceil_le" altname="ceil_le" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="ceil_lest" altname="ceil_lest" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="y"><type name="t" local="true"/></var></app></concls></axiom><axiom name="ceil_to_real" altname="ceil_to_real" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="ceil" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="ceil_to_int" altname="ceil_to_int" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="ceil" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="floor_le" altname="floor_le" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></concls></axiom><axiom name="floor_lest" altname="floor_lest" path="ieee_float.Float32"><prems><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="floor_to_real" altname="floor_to_real" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="from_int" path="real.FromInt"><fun><type name="Int.int"/><type name="Real.real"/></fun></const><app><const name="floor" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></app></concls></axiom><axiom name="floor_to_int" altname="floor_to_int" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="floor" path="real.Truncate"><fun><type name="Real.real"/><type name="Int.int"/></fun></const><app><const name="tqtreal" local="true"><fun><type name="t" local="true"/><type name="Real.real"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="RNA_down" altname="RNA_down" path="ieee_float.Float32"><prems><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNA" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="RNA_up" altname="RNA_up" path="ieee_float.Float32"><prems><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNA" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="RNA_down_tie" altname="RNA_down_tie" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app></app><app><const name="is_negative" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNA" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="RNA_up_tie" altname="RNA_up_tie" path="ieee_float.Float32"><prems><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><var name="x"><type name="t" local="true"/></var></app><app><const name="sub" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTN" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></app><app><const name="is_positive" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNA" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RTP" local="true"><type name="mode" local="true"/></const><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="to_int_roundToIntegral" altname="to_int_roundToIntegral" path="ieee_float.Float32"><prems/><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="to_int_monotonic" altname="to_int_monotonic" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var></app><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="to_int_of_int" altname="to_int_of_int" path="ieee_float.Float32"><prems><app><const name="in_safe_int_range" local="true"><pred><type name="Int.int"/></pred></const><var name="i"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="i"><type name="Int.int"/></var></app></app><var name="i"><type name="Int.int"/></var></app></concls></axiom><axiom name="eq_to_int" altname="eq_to_int" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="neg_to_int" altname="neg_to_int" path="ieee_float.Float32"><prems><app><const name="is_int" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="x"><type name="t" local="true"/></var></app></app><app><const name="Groups.uminus_class.uminus"/><app><const name="to_int" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="Int.int"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></app></concls></axiom><axiom name="roundToIntegral_is_finite" altname="roundToIntegral_is_finite" path="ieee_float.Float32"><prems><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var></app></prems><concls><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="roundToIntegral" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="t" local="true"/></var></app></app></concls></axiom><axiom name="round_bound_ne" altname="round_bound_ne" path="ieee_float.Float32"><prems><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.minus_class.minus"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="16777216"/></app><app><const name="Groups.abs_class.abs"/><var name="x"><type name="Real.real"/></var></app></app></app><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="1427247692705959881058285969449495136382746624"/></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app></app><app><const name="Orderings.ord_class.less_eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><var name="x"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="16777216"/></app><app><const name="Groups.abs_class.abs"/><var name="x"><type name="Real.real"/></var></app></app></app><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="1427247692705959881058285969449495136382746624"/></app></app></app></concls></axiom><axiom name="round_bound" altname="round_bound" path="ieee_float.Float32"><prems><app><const name="no_overflow" local="true"><pred><type name="mode" local="true"/><type name="Real.real"/></pred></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Groups.minus_class.minus"/><app><const name="Groups.minus_class.minus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="8388608"/></app><app><const name="Groups.abs_class.abs"/><var name="x"><type name="Real.real"/></var></app></app></app><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="713623846352979940529142984724747568191373312"/></app></app><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app></app><app><const name="Orderings.ord_class.less_eq"/><app><const name="round" local="true"><fun><type name="mode" local="true"/><type name="Real.real"/><type name="Real.real"/></fun></const><var name="m"><type name="mode" local="true"/></var><var name="x"><type name="Real.real"/></var></app><app><const name="Groups.plus_class.plus"/><app><const name="Groups.plus_class.plus"/><var name="x"><type name="Real.real"/></var><app><const name="Groups.times_class.times"/><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="8388608"/></app><app><const name="Groups.abs_class.abs"/><var name="x"><type name="Real.real"/></var></app></app></app><app><const name="Why3_Real.why3_divide"/><num val="1"><type name="Real.real"/></num><num val="713623846352979940529142984724747568191373312"/></app></app></app></concls></axiom><definition altname="neq" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="neq"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.Not"/><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app></app></definition><definition altname="bool_lt" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_lt"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="bool_le" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_le"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="bool_gt" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_gt"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="bool_ge" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_ge"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="y"><type name="t" local="true"/></var><var name="x"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="bool_eq" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_eq"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="bool_neq" path="_gnatprove_standard.Float32"><app><const name="HOL.eq"/><app><var name="bool_neq"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="HOL.Not"/><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><param name="rem" altname="rem" path="_gnatprove_standard.Float32"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></param><axiom name="one_of_int" altname="one_of_int" path="_gnatprove_standard.Float32"><prems/><concls><app><const name="HOL.eq"/><num val="1"><type name="Real.real"/></num><app><const name="of_int" local="true"><fun><type name="mode" local="true"/><type name="Int.int"/><type name="t" local="true"/></fun></const><const name="RNA" local="true"><type name="mode" local="true"/></const><num val="1"><type name="Int.int"/></num></app></app></concls></axiom><datatypes><datatype name="t__ref" altname="t__ref" path="_gnatprove_standard.Float32"><params/><constrs><constr name="mk_t__ref" altname="mk t__ref" path="_gnatprove_standard.Float32"><carg name="t__content" altname="t__content" path="_gnatprove_standard.Float32"><type name="t" local="true"/></carg></constr></constrs></datatype></datatypes><definition altname="ite" path="bool.Ite"><app><const name="HOL.eq"/><app><var name="ite"><fun><type name="HOL.bool"/><tvar name="a"/><tvar name="a"/><tvar name="a"/></fun></var><var name="b"><type name="HOL.bool"/></var><var name="x"><tvar name="a"/></var><var name="y"><tvar name="a"/></var></app><case><var name="b"><type name="HOL.bool"/></var><pat><const name="HOL.True"/><var name="x"><tvar name="a"/></var></pat><pat><const name="HOL.False"/><var name="y"><tvar name="a"/></var></pat></case></app></definition><definition altname="bool_eq" path="_gnatprove_standard_th.Boolean_Func"><app><const name="HOL.eq"/><app><var name="bool_eq1"><fun><type name="HOL.bool"/><type name="HOL.bool"/><type name="HOL.bool"/></fun></var><var name="x"><type name="HOL.bool"/></var><var name="y"><type name="HOL.bool"/></var></app><app><const name="HOL.If"/><app><const name="HOL.eq"/><var name="x"><type name="HOL.bool"/></var><var name="y"><type name="HOL.bool"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><definition altname="to_int" path="_gnatprove_standard_th.Boolean_Func"><app><const name="HOL.eq"/><app><var name="to_int1"><fun><type name="HOL.bool"/><type name="Int.int"/></fun></var><var name="b"><type name="HOL.bool"/></var></app><app><const name="HOL.If"/><app><const name="HOL.eq"/><var name="b"><type name="HOL.bool"/></var><const name="HOL.True"/></app><num val="1"><type name="Int.int"/></num><num val="0"><type name="Int.int"/></num></app></app></definition><definition altname="of_int" path="_gnatprove_standard_th.Boolean_Func"><app><const name="HOL.eq"/><app><var name="of_int1"><fun><type name="Int.int"/><type name="HOL.bool"/></fun></var><var name="i"><type name="Int.int"/></var></app><app><const name="HOL.If"/><app><const name="HOL.eq"/><var name="i"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app><const name="HOL.False"/><const name="HOL.True"/></app></app></definition><definition altname="in_range" path="_gnatprove_standard.Boolean"><app><const name="HOL.eq"/><app><var name="in_range1"><pred><type name="Int.int"/></pred></var><var name="x"><type name="Int.int"/></var></app><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="x"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app><app><const name="HOL.eq"/><var name="x"><type name="Int.int"/></var><num val="1"><type name="Int.int"/></num></app></app></app></definition><param name="attr__ATTRIBUTE_IMAGE" altname="attr__ATTRIBUTE_IMAGE" path="_gnatprove_standard.Boolean"><fun><type name="HOL.bool"/><type name="us_image" local="true"/></fun></param><param name="attr__ATTRIBUTE_VALUE__pre_check" altname="attr__ATTRIBUTE_VALUE__pre_check" path="_gnatprove_standard.Boolean"><pred><type name="us_image" local="true"/></pred></param><param name="attr__ATTRIBUTE_VALUE" altname="attr__ATTRIBUTE_VALUE" path="_gnatprove_standard.Boolean"><fun><type name="us_image" local="true"/><type name="HOL.bool"/></fun></param><typedecl name="float_us" altname="float__" path="Standard__float"><params/></typedecl><definition altname="bool_eq" path="Standard__float"><app><const name="HOL.eq"/><app><var name="bool_eq2"><fun><type name="t" local="true"/><type name="t" local="true"/><type name="HOL.bool"/></fun></var><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><app><const name="HOL.If"/><app><const name="eq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><var name="x"><type name="t" local="true"/></var><var name="y"><type name="t" local="true"/></var></app><const name="HOL.True"/><const name="HOL.False"/></app></app></definition><param name="user_eq" altname="user_eq" path="Standard__float"><fun><type name="float_us" local="true"/><type name="float_us" local="true"/><type name="HOL.bool"/></fun></param><param name="attr__ATTRIBUTE_IMAGE1" altname="attr__ATTRIBUTE_IMAGE" path="Standard__float"><fun><type name="t" local="true"/><type name="us_image" local="true"/></fun></param><param name="attr__ATTRIBUTE_VALUE__pre_check1" altname="attr__ATTRIBUTE_VALUE__pre_check" path="Standard__float"><pred><type name="us_image" local="true"/></pred></param><param name="attr__ATTRIBUTE_VALUE1" altname="attr__ATTRIBUTE_VALUE" path="Standard__float"><fun><type name="us_image" local="true"/><type name="t" local="true"/></fun></param><param name="dummy" altname="dummy" path="Standard__float"><type name="float_us" local="true"/></param><datatypes><datatype name="float____ref" altname="float____ref" path="Standard__float"><params/><constrs><constr name="mk_float____ref" altname="mk float____ref" path="Standard__float"><carg name="float____content" altname="float____content" path="Standard__float"><type name="float_us" local="true"/></carg></constr></constrs></datatype></datatypes><definition altname="float____ref_float____content__projection" path="Standard__float"><app><const name="HOL.eq"/><app><var name="float____ref_float____content__projection"><fun><type name="float____ref" local="true"/><type name="float_us" local="true"/></fun></var><var name="a"><type name="float____ref" local="true"/></var></app><app><const name="float____content" local="true"><fun><type name="float____ref" local="true"/><type name="float_us" local="true"/></fun></const><var name="a"><type name="float____ref" local="true"/></var></app></app></definition><definition altname="dynamic_invariant" path="Standard__float___axiom"><app><const name="HOL.eq"/><app><var name="dynamic_invariant"><pred><type name="t" local="true"/><type name="HOL.bool"/><type name="HOL.bool"/><type name="HOL.bool"/><type name="HOL.bool"/></pred></var><var name="temp___expr_60"><type name="t" local="true"/></var><var name="temp___is_init_56"><type name="HOL.bool"/></var><var name="temp___skip_constant_57"><type name="HOL.bool"/></var><var name="temp___do_toplevel_58"><type name="HOL.bool"/></var><var name="temp___do_typ_inv_59"><type name="HOL.bool"/></var></app><app><const name="HOL.implies"/><app><const name="HOL.disj"/><app><const name="HOL.eq"/><var name="temp___is_init_56"><type name="HOL.bool"/></var><const name="HOL.True"/></app><app><const name="le" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="neg" local="true"><fun><type name="t" local="true"/><type name="t" local="true"/></fun></const><num val="340282346638528859811704183484516925440"><type name="Real.real"/></num></app><num val="340282346638528859811704183484516925440"><type name="Real.real"/></num></app></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><var name="temp___expr_60"><type name="t" local="true"/></var></app></app></app></definition><param name="x" altname="x" path="Double__double__x"><type name="t" local="true"/></param><param name="attr__ATTRIBUTE_ADDRESS" altname="attr__ATTRIBUTE_ADDRESS" path="Double__double__x"><type name="Int.int"/></param><lemma name="VC_def" altname="VC def"><prems><app><const name="dynamic_invariant" local="true"><pred><type name="t" local="true"/><type name="HOL.bool"/><type name="HOL.bool"/><type name="HOL.bool"/><type name="HOL.bool"/></pred></const><const name="x" local="true"><type name="t" local="true"/></const><const name="HOL.True"/><const name="HOL.False"/><const name="HOL.True"/><const name="HOL.True"/></app><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="Why3_Real.why3_divide"/><num val="0"><type name="Real.real"/></num><num val="10"/></app><const name="x" local="true"><type name="t" local="true"/></const></app><app><const name="lt" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><const name="x" local="true"><type name="t" local="true"/></const><num val="1000"><type name="Real.real"/></num></app><app><const name="tqtisFinite" local="true"><pred><type name="t" local="true"/></pred></const><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><const name="x" local="true"><type name="t" local="true"/></const><num val="2"><type name="Real.real"/></num></app></app></prems><concls><app><const name="neq" local="true"><pred><type name="t" local="true"/><type name="t" local="true"/></pred></const><app><const name="add" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><const name="x" local="true"><type name="t" local="true"/></const><const name="x" local="true"><type name="t" local="true"/></const></app><app><const name="mul" local="true"><fun><type name="mode" local="true"/><type name="t" local="true"/><type name="t" local="true"/><type name="t" local="true"/></fun></const><const name="RNE" local="true"><type name="mode" local="true"/></const><const name="x" local="true"><type name="t" local="true"/></const><num val="2"><type name="Real.real"/></num></app></app></concls></lemma></theory>